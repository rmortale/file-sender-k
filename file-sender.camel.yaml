- route:
    id: filesender-route
    from:
      id: from-kafka
      uri: kamelet:kafka-not-secured-source
      parameters:
        bootstrapServers: "{{app.bootstrapServers}}"
        consumerGroup: "{{app.consumerGroup}}"
        topic: "{{app.topicNames}}"
      steps:
        - setHeaders:
            id: extract file names
            headers:
              - expression:
                  jq:
                    expression: header("kafka.KEY") | split("/")[1:] | join("/")
                name: CamelAwsS3Key
              - expression:
                  jq:
                    expression: header("kafka.KEY") | split("/")[0]
                name: CamelAwsS3BucketName
              - expression:
                  jq:
                    expression: header("kafka.KEY") | split("/")[-1]
                name: file
        - to:
            id: download from minio
            uri: aws2-s3://dummybucket
        # - to:
        #     id: save to local dir
        #     uri: file://{{app.localDir}}?
        - to:
            id: kafka commit
            uri: kamelet:kafka-manual-commit-action
        - to:
            uri: log:kafkacommited?showBody=false&showHeaders=true&multiline=true
        - to:
            id: to-1797
            uri: seda:toSftp

- route:
    id: filesender-upload
    from:
      id: upload
      uri: seda:toSftp
      parameters:
        concurrentConsumers: 6
      steps:
        - to:
            id: upload to sftp
            uri: kamelet:sftp-sink
            parameters:
              connectionHost: 144.24.252.7
              connectionPort: "2222"
              directoryName: upload
              password: pass
              username: foo
        - log: "Uploaded to: ${header.file}"
  