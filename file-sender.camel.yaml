- route:
    id: filesender-route
    ## streamCache false is used to download large files without loading them in memory
    streamCache: false
    from:
      id: from-kafka
      uri: kamelet:kafka-not-secured-source
      parameters:
        bootstrapServers: "{{app.bootstrapServers}}"
        consumerGroup: "{{app.consumerGroup}}"
        topic: "{{app.topicNames}}"
      steps:
        - setHeaders:
            id: extract file names
            headers:
              - expression:
                  jq:
                    expression: header("kafka.KEY") | split("/")[1:] | join("/")
                name: CamelAwsS3Key
              - expression:
                  jq:
                    expression: header("kafka.KEY") | split("/")[0]
                name: CamelAwsS3BucketName
              - expression:
                  jq:
                    expression: header("kafka.KEY") | split("/")[-1]
                name: file
        - log: "Received file: ${header.file}"
        - to:
            id: download from minio
            uri: aws2-s3://dummybucket
        - to:
            id: save to local dir
            uri: file://{{app.localDir}}
        - log: "Saved to: ${header.file}"

- route:
    id: filesender-upload
    ## streamCache false is used to upload large files without loading them in memory
    streamCache: false
    from:
      id: from-local-dir
      uri: file://{{app.localDir}}
      parameters:
        autoCreate: true
        moveFailed: "{{app.localDir}}/failed/${date:now:yyyy-MM-dd}"
        move: "{{app.localDir}}/done/${date:now:yyyy-MM-dd}"
        initialDelay: 0
        delay: 5
        maxMessagesPerPoll: 1
      steps:
        - to:
            id: upload to sftp
            uri: kamelet:sftp-sink
            parameters:
              connectionHost: 144.24.252.7
              connectionPort: "2222"
              directoryName: upload
              password: pass
              username: foo
        - log: "Uploaded to: ${header.file}"

